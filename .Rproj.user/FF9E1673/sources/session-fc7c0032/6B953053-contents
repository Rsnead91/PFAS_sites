
# beginning of rscript ----

# 1. libraries ----

if (!require("pacman")) install.packages("pacman")

pacman::p_load('rsconnect','shinydashboard','tidyverse','janitor','viridis','readxl','shiny','DT','sf')


# 2. data ----

load("~/cms_long_temporal")

load("~/cms_long.Rdata")

load("~/cms_states.Rdata")

load("~/shiny_table.Rdata")

# 3. ui ----

ui <- dashboardPage(
  
  dashboardHeader(title = "Healthcare Costs in the United States",
                  titleWidth = 350),
  
  dashboardSidebar(
    
      br(),
      
      div(
        style = "margin-left: 12px; font-family: Arial;",
        helpText("Modify Personal Healthcare Expenditures by Age and Sex")
      ),
      
      selectInput("age", 
                  label = "Age",
                  choices = list("Total", 
                                 "0-18",
                                 "19-44", 
                                 "45-64",
                                 "65-84",
                                 "85+"),
                  selected = "Total"),
      
      selectInput("sex", 
                  label = "Sex",
                  choices = list("Total", 
                                 "Males",
                                 "Females"),
                  selected = "Total"),
      
      br(),
      br(),

      div(
        style = "margin-left: 12px; font-family: Arial;",
        helpText("View Per Capita Spending in the United States by Condition")
      ),
      
      selectInput("map_text", 
                  label = "Condition",
                  choices = list("Alcohol Abuse",
                                 "Alzheimer's Disease/Dementia",
                                 "Arthritis",
                                 "Asthma",
                                 "Cancer",
                                 "Chronic Kidney Disease",
                                 "COPD",
                                 "Depression",
                                 "Diabetes",
                                 "Heart Failure",
                                 "Hyperlipidemia",
                                 "Hypertension",
                                 "Ischemic Heart Disease",
                                 "Osteoporosis",
                                 "Stroke"
                  ),
                  selected = "Cancer"),
      
      br(),
      br(),
      
      div(
        style = "margin-left: 5px; font-family: Arial;",
        helpText("Data Source:"),
        helpText("Centers for Medicare and Medicaid"),
        helpText("https://www.cms.gov/research-statistics-data-and-systems/statistics-trends-and-reports")
      )
    ),

    dashboardBody(
      
      tags$head(tags$style(HTML('.small-box .icon-large {left: 250px; top: 2px}'))),
      
      fluidRow(
        column(
          
          width = 4, align = "center",
          
          valueBoxOutput("box1", width = NULL),
          
          valueBoxOutput("box2", width = NULL),
          
          valueBoxOutput("box3", width = NULL)
          
        ),

        box(plotOutput("plot", height = 328), 
            width = 8
            )
        
    ),
    fluidRow(
     
      box(DTOutput("mytable"),
          width = 6),
      
      box(plotOutput("us_map", height = 394), 
          width = 6
          )
      
    )
  )
)



# Define server logic ----
server <- function(input, output) {
  
  output$box1 <- renderValueBox({
    valueBox(
      "HOSPITAL CARE", "Most Expensive Healthcare Service", icon = icon("hospital"),
      color = "light-blue"
    )   
  })

  output$box2 <- renderValueBox({
    valueBox(
      "ELIQUIS", "Highest Total Drug Cost for Medicare (2021)", icon = icon("prescription-bottle-medical"),
      color = "light-blue"
    )   
  })
  
  output$box3 <- renderValueBox({
    valueBox(
      "STROKE", "Most Expensive Health Condition", icon = icon("brain"),
      color = "light-blue"
    )   
  })

  output$mytable <- renderDT({
    datatable(
      shiny_table,
        options = list(dom = 'tp',
                       autoWidth = TRUE,
                       initComplete = JS(
                         "function(settings, json) {",
                         "$(this.api().table().header()).css({'font-family': 'Arial'});",
                         "}"),
                       pageLength = 5,
                       scrollX = TRUE,
                       columnDefs = list(list(targets = c(2:21), className = 'dt-head-center dt-body-right'),
                                         list(targets = 1, className = 'dt-head-center'))),
        caption = htmltools::tags$caption("Aggregate State-level Medicare Spending by Condition", style="color: black; font-famil: Arial; font-size: 26px;"),
        class = 'dt-head-center stripe',
        colnames = c("State", "Alcohol Abuse", "Alzheimers and Dementia-related Disease", "Arthritis", "Asthma", "Atrial Fibrillation", "Autism Spectrum Disorders", "Cancer", "Chronic Kidney Disease", "COPD", "Depression", "Diabetes", "Drug and Substance Abuse", "Heart Failure", "Hepatitis Chronic Viral B C", "HIV/AIDS", "Hyperlipidemia", "Hypertension", "Ischemic Heart Disease", "Osteoporosis", "Schizophrenia and Other Psychotic Disorders", "Stroke")
  ) %>% 
    formatCurrency(
      c('alcohol_abuse_sum', 'alz_sum', 'arthritis_sum', 'asthma_sum', 'afib_sum', 'asd_sum', 'cancer_sum', 'kidney_sum', 'copd_sum', 'depression_sum', 'diabetes_sum', 'drug_sum', 'heartfail_sum', 'hep_sum', 'hiv_sum', 'hyperlip_sum', 'hyperten_sum', 'heartdis_sum', 'osteo_sum', 'psych_sum', 'stroke_sum'), 
      digits = 0) %>% 
    formatStyle(
      c('state','alcohol_abuse_sum', 'alz_sum', 'arthritis_sum', 'asthma_sum', 'afib_sum', 'asd_sum', 'cancer_sum', 'kidney_sum', 'copd_sum', 'depression_sum', 'diabetes_sum', 'drug_sum', 'heartfail_sum', 'hep_sum', 'hiv_sum', 'hyperlip_sum', 'hyperten_sum', 'heartdis_sum', 'osteo_sum', 'psych_sum', 'stroke_sum'),
      fontFamily = 'Arial') %>% 
    formatStyle(
      'alcohol_abuse_sum',
      background = styleColorBar(shiny_table$alcohol_abuse_sum, 'lightblue')
    ) %>%
    formatStyle(
      'alz_sum',
      background = styleColorBar(shiny_table$alz_sum, 'lightpink')
    ) %>%    
    formatStyle(
      'arthritis_sum',
      background = styleColorBar(shiny_table$arthritis_sum, 'lightblue')
    ) %>%
    formatStyle(
      'asthma_sum',
      background = styleColorBar(shiny_table$asthma_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'afib_sum',
      background = styleColorBar(shiny_table$afib_sum, 'lightblue')
    ) %>%  
    formatStyle(
      'asd_sum',
      background = styleColorBar(shiny_table$asd_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'cancer_sum',
      background = styleColorBar(shiny_table$cancer_sum, 'lightblue')
    ) %>%
    formatStyle(
      'kidney_sum',
      background = styleColorBar(shiny_table$kidney_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'copd_sum',
      background = styleColorBar(shiny_table$copd_sum, 'lightblue')
    ) %>%
    formatStyle(
      'depression_sum',
      background = styleColorBar(shiny_table$depression_sum, 'lightpink')
    ) %>%
    formatStyle(
      'diabetes_sum',
      background = styleColorBar(shiny_table$diabetes_sum, 'lightblue')
    ) %>%  
    formatStyle(
      'drug_sum',
      background = styleColorBar(shiny_table$drug_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'heartfail_sum',
      background = styleColorBar(shiny_table$heartfail_sum, 'lightblue')
    ) %>%  
    formatStyle(
      'hep_sum',
      background = styleColorBar(shiny_table$hep_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'hiv_sum',
      background = styleColorBar(shiny_table$hiv_sum, 'lightblue')
    ) %>%  
    formatStyle(
      'hyperlip_sum',
      background = styleColorBar(shiny_table$hyperlip_sum, 'lightpink')
    ) %>%  
    formatStyle(
      'hyperten_sum',
      background = styleColorBar(shiny_table$hyperten_sum, 'lightblue')
    ) %>%  
    formatStyle(
      'heartdis_sum',
      background = styleColorBar(shiny_table$heartdis_sum, 'lightpink')
    ) %>%    
    formatStyle(
      'osteo_sum',
      background = styleColorBar(shiny_table$osteo_sum, 'lightblue')
    ) %>%    
    formatStyle(
      'psych_sum',
      background = styleColorBar(shiny_table$psych_sum, 'lightpink')
    ) %>%    
    formatStyle(
      'stroke_sum',
      background = styleColorBar(shiny_table$stroke_sum, 'lightblue')
    )  
  })
    
    
  dataInput <- reactive({
    filter(cms_long_temporal,
           age_group == input$age & sex == input$sex
    )
  })
  
  output$plot <- renderPlot({

    ggplot(dataInput(), aes(x = as.numeric(year), y = as.numeric(cost), fill = service)) +
      geom_area(alpha=0.6 , size=.5, colour="white") +
      scale_fill_viridis(discrete = T, labels = c("Dental", "Home Health", "Hospital Care", "Nursing Care", "Physician Services", "Prescriptions")) +
      labs(title = "Personal Healthcare Expenditure by Payer and Service, from 2002 to 2020") + #, caption = "Data from the Centers for Medicare and Medicaid") +
      guides(fill=guide_legend(nrow=1,byrow=TRUE, override.aes = list(size=6))) +
      facet_wrap(vars(payer), labeller = labeller(payer = c("Medicaid" = "Medicaid","Medicare" = "Medicare","Private health Insurance" ="Private Health Insurance"))) +
      theme_void() +
      theme(
        plot.background = element_rect(fill = "white", color = "white"),
        plot.margin = margin(0.5,0,0.25,0, unit = "cm"),
        plot.title = element_text(vjust = 3, hjust = 0.5, family = "Arial", size = 24),
        plot.subtitle = element_text(vjust = 3, hjust = 0.5, family = "Arial", size = 20),
        panel.background = element_rect(fill = "white", color = "black", size = 1),
        panel.grid.major = element_line(colour = NA, linetype = "blank"),
        panel.grid.minor = element_line(colour = NA, linetype = "blank"),
        panel.spacing = unit(1.5, "lines"),
        axis.line = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        strip.switch.pad.grid = unit(0.5, "in"),
        strip.placement = "outside",
        strip.text = element_text(family = "Arial", size = 16, vjust = 1),
        legend.margin = margin(t = 10, unit = "pt"),
        legend.position = "bottom",
        legend.text = element_text(size = 17),
        legend.key.size = unit(1, 'cm'),
        legend.title = element_blank(),
        legend.background = element_blank(),
        legend.spacing.x = unit(0.1, 'cm'),
        legend.direction = "horizontal"
        ) + 
      labs(x = NULL, y = NULL, colour = NULL)
    
  })  
  
  map_data <- reactive({
    filter(cms_states, condition == input$map_text)
  })

  output$us_map <- renderPlot({
    
    ggplot(map_data()) +
      geom_sf(aes(color = std_med_payments, fill = std_med_payments)) +
      coord_sf(crs = 5070) +
      scale_fill_gradientn(colors = c("cornflowerblue","white", "maroon"), 
                           labels = dollar_format(round(quantile(as.vector(filter(cms_states, condition == input$map_text)$std_med_payments), probs = c(0,.5,1), na.rm = FALSE), 0)), 
                           breaks = quantile(as.vector(filter(cms_states, condition == input$map_text)$std_med_payments), probs = c(0,.5,1), na.rm = FALSE),
                           limits = quantile(as.vector(filter(cms_states, condition == input$map_text)$std_med_payments), probs = c(0,1), na.rm = FALSE)) +
      scale_color_gradientn(colors = c("cornflowerblue","white", "maroon")) +
      guides(color="none") +
      labs(title = "Total Medicare Standardized Per Capita Spending", subtitle = toupper(input$map_text)) +
      theme_void() + 
      theme(
        plot.title = element_text(hjust = 0.5, size = 24),
        plot.subtitle = element_text(hjust = 0.5, vjust = -0.2, size = 20),
        legend.position = "bottom",
        legend.text = element_text(hjust = 0.5, size = 12),
        legend.title = element_blank(),
        legend.key.width = unit(3, 'cm')
      )
    
  })
}

# 3. run shiny app ----

# shinyApp(ui, server)

shinyApp(ui = ui, server = server, options=c(launch.browser = .rs.invokeShinyPaneViewer))

# end of rscript ----

